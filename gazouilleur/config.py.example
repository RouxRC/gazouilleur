#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Example config of the actual bot gazouilleur on #RegardsCitoyens 's chan on freenode.net
# This is python syntax, be careful to respect it following the examples


# 1) Choose your IRC server and bot name
# Remember to register it with a botpass
HOST = 'adams.freenode.net'
PORT = 6667
SSL = False         # Set to True for IRC servers accepting SSL mode
BOTNAME = 'gazouilleur2'
BOTPASS = '--------'
DEFAULT_EMAIL='example@example.org'

# 2) Configure access to your MongoDB
# Except for specific mongo config, this should not be modified
MONGODB = {
  'HOST': 'localhost',
  'PORT': 27017,
  'DATABASE': BOTNAME,
  'USER': BOTNAME,
  'PSWD': BOTPASS
}


# 3) Configure Gazouilleur's features
# Which character to use for prefix commands to the bot.
# Careful: using ordinar characters can naturally result in weird behaviors
# You can specify multiple accepted characters by giving an array or a multicharacter string i.e. '!%' or ['!', '%']
COMMAND_CHARACTER = '!'
# Define GLOBAL_USERS with rights to perform all available commands on all channels
GLOBAL_USERS = ['Roux']
# Define how many hours back in time Gazouilleur should try to catch up on followed news and tweets after an offtime
BACK_HOURS = 6

# Optionnaly set a global formatting setting to choose the colors used in the bot's messages and whether to prefix them with some characters.
# This setting can be set individually as well for each chan
# A standard color setting is set by default as well as a prefix of two spaces and monocolor settings.
# You can use other existing presets:
#FORMAT = "normal"      # no prefix nor any coloring
#FORMAT = "red"         # everything red an not prefix
#FORMAT = "prefixed"    # only a 4 spaces prefix
# Or define your own color settings:
#FORMAT = {
#  "colors": {
#    "user": "light red",   # answered irc nicknames
#    "msgs": "cyan",        # text of irc answers
#    "titles": "blue",      # tweets authors and rss names
#    "text": "purple",      # tweets messages and rss titles
#    "meta": "gray"         # diverse meta information
#    #"all": "light blue"   # overrides all colors if present in colors
#  },
#  "prefix": "  "           # text preceding all messages
#}
# See available colors in gazouilleur/lib/irccolors.py
# Note: some IRC channels may be already set with mode +c which prevents displaying any color. Freenode disables it for instance by default on any registered channel.
# Use /msg ChanServ SET #channel MLOCK +nt-clk with founder or op rights and +s on the channel to reenable colors.


# 4) Define in which IRC channels Gazouilleur should operate respecting the following rules:
# - One entry per channel with various optional options
# - One and only one channel should have MASTER set to True
# - When setting a Twitter account for a channel, you will need to create the corresponding app on https://dev.twitter.com
# Be sure to give it "Read, write, and direct messages" rights.
# - When setting an Identi.ca account for a channel, you will need to run `python bin/auth_identica.py` to authorize it.
CHANNELS = {
  'regardscitoyens': {
    'MASTER': True,    # Master channel will be the focus of most of the commands sent in private to the bot when option --chan is not specified
    'DISCREET': False, # (optional) Set to True to forbid bot's answers when getting unknown commands or pinged
    'FORMAT': 'default', # (optional) Set specific formatting colors and prefix for the bot's messages on this chan.
                         # Set to default, normal or prefixed or set your own formatting config (as in FORMAT in section 3) above)
    'EXCLUDE_COMMANDS': ['title', 'lastmore'], # (optional) List names or regexp matching names of commands you do not want to be available for this chan. Example in chan below. See list of all commands in file LIST_COMMANDS.md or online at https://github.com/RouxRC/gazouilleur/blob/master/LIST_COMMANDS.md
    'USERS': [],       # These extra USERS will have rights to perform all available commands on this specific channel
    'IDENTICA': {      # Optionally set an IDENTICA USER to allow microblogging with Identi.ca
      'USER': 'regardscitoyens'    # A password is no longer required since the migration from Status.net to Pump.io.
                                   # Please run `python bin/auth_identica.py` to get OAuth config.
    },
    'TWITTER': {    # Optionally set a TWITTER account for the channel to send tweets and follow its mentions, DMs and stats
      'USER': 'RegardsCitoyens',
      'DISPLAY_RT': True,   # Set to True to display also all RTs of the Twitter account's tweets
      'KEY': 'xxxxxxxxxxxxxxxxxxxxx',   # Set KEY SECRET OAUTH_TOKEN and OAUTH_SECRET from dev.twitter.com
      'SECRET': 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
      'OAUTH_TOKEN': 'xxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
      'OAUTH_SECRET': 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
      'DISPLAY_STATS': True,# (optional) Set to False to disable stats display every day at 1pm and 6pm
      'FORBID_POST': False, # (optional) Set to True to forbid any use of Twitter's posting commands (statuses, dms, rts, answers, ...). Useful to use Twitter's streaming in following-only mode on a channel.
      'ALLOW_ALL': False    # (optional) Set to True to allow any user on the channel to post tweets with the account
    },                      # If set to False or omitted, only GLOBAL_USERS and the USERS set for the chnnel will.
    'DISPLAY_RT': False     # Set to True to display also all RTs for search queries set on the channel
  },
  'gazouilleur-test': {     # Add more IRC channels
    'DISCREET': True,
    'FORMAT': 'normal',
    'EXCLUDE_COMMANDS': ['.*ping.*', 'last.*', 'count', 'test', '.*pad'],
    'USERS': [],
    'DISPLAY_RT': False
  },
  'directan': {
    'DISCREET': True,
    'FORMAT': 'prefixed',
    'EXCLUDE_COMMANDS': ['.*ping.*', '.*count', 'test', 'lastmore', '.*pad', '(runlater|tasks|cancel)', '.*pad', 'title'],
    'USERS': [],
    'TWITTER': {
      'USER': 'Gazou_DirectAN',
      'DISPLAY_RT': False,
      'KEY': 'xxxxxxxxxxxxxxxxxxxxxx',
      'SECRET': 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
      'OAUTH_TOKEN': 'xxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
      'OAUTH_SECRET': 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
      'DISPLAY_STATS': False,
      'FORBID_POST': True,
      'ALLOW_ALL': False
    },
    'DISPLAY_RT': False
  }
}


# 5) Optional Feedback
# By default, any Gazouilleur bot will join as well the "#gazouilleur" channel, just to meet and hang out with his folks :)
# The only functionnality left to the bots in this channel is to list his other channels with the command `chans`.
# If you do not like that, feel free to uncomment the following line to keep your gazouilleur hidden from the others.
#SOLITARY = True


# 6) Optionally add web statistics of the Twitter accounts
# URL_STATS is optional to provide a web view on Twitter's stats.
# It requires the installation of a web server (apache, ...) and to install matplotlib
# Uncomment the line and set your url if you want to use it.
# This url needs to be routed by a webserver to Gazouilleur's "web" directory.
# For instance if /var/www/ is already served by apache, run `ln -s ##GAZOUILLEURPATH##/web /var/www/twitter-stats`
#URL_STATS = "http://www.regardscitoyens.org/stats/"


# 7) Developer's options
# COLOR_LOGS (True by default) activates colorized logs. Uncomment et set to False to deactivate
#COLOR_LOGS = True
# DEBUG mode will make log a lot more verbose and display errors publicly on the channel
DEBUG = False
# ADMINS will get in private messages info about errors
ADMINS = GLOBAL_USERS
